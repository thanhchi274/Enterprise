{"version":3,"sources":["pages/user/sign-up/SignUp.js"],"names":["Copyright","variant","color","align","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","connect","dispatch","signUpStart","userCredentials","useHistory","useState","displayName","email","password","confirmPassword","setCredentials","handleSubmit","event","a","preventDefault","alert","handleChange","target","value","name","classes","component","maxWidth","className","onSubmit","container","item","xs","sm","required","fullWidth","id","label","autoComplete","onChange","type","justify","to","mt"],"mappings":"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","file":"static/js/3.11b3ae23.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { connect } from \"react-redux\";\n\nimport {Link} from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { useHistory } from \"react-router-dom\";\nimport { signUpStart } from \"../../../Store/user/user.action\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright Â© \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Enterprise Web Development\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\nconst SignUp= ({ signUpStart })=> {\n  let history = useHistory();\n  const [userCredentials, setCredentials] = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n  const { displayName, email, password, confirmPassword } = userCredentials;\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    if (password !== confirmPassword) {\n      alert(\"password don't match\");\n      return;\n    }\n    signUpStart({ displayName, email, password });\n    setCredentials({ ...userCredentials, email: \"\", password: \"\" });\n  };\n  const handleChange = event => {\n    const { value, name } = event.target;\n    setCredentials({\n      ...userCredentials,\n      [name]: value,\n    });\n  };\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}></Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                id=\"displayName\"\n                label=\"Display Name\"\n                name=\"displayName\"\n                value={displayName}\n                autoComplete=\"userName\"\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                value={email}\n                autoComplete=\"email\"\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                name=\"password\"\n                value={password}\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                name=\"confirmPassword\"\n                type=\"password\"\n                value={confirmPassword}\n                value={confirmPassword}\n                label=\"Confirm Password\"\n                onChange={handleChange}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link to=\"/\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\nconst mapDispatchToProps = (dispatch) => ({\n  signUpStart: (userCredentials) => dispatch(signUpStart(userCredentials)),\n});\nexport default connect(null, mapDispatchToProps)(SignUp);\n"],"sourceRoot":""}